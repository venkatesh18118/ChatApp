{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/web-socket.service.ts","./src/app/token-interceptor.service.ts","./src/environments/environment.ts","./src/app/admin-dashboard/admin-dashboard.component.ts","./src/app/admin-dashboard/admin-dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin-login/admin-login.component.ts","./src/app/admin-login/admin-login.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/videochat/videochat.component.ts","./src/app/videochat/videochat.component.html","./src/app/chatroom.service.ts","./src/app/announcement/announcement.component.ts","./src/app/announcement/announcement.component.html","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/chatroom/chatroom.component.ts","./src/app/chatroom/chatroom.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { WebSocketService } from '../web-socket.service';\nimport {ChatroomService} from '../chatroom.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup\n  constructor(private formBuilder: FormBuilder, private http: HttpClient, private router: Router, private websocketService: WebSocketService, private chatroomService: ChatroomService, private snackbar: MatSnackBar) {\n    this.registerForm = this.formBuilder.group({\n      name:['',Validators.required],\n      email:['',Validators.required],\n      password:['',Validators.required],\n      year:['',Validators.required],\n      section:['',Validators.required]\n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n  async registerDetails(){\n    if(this.registerForm.valid){\n      this.http.post('https://fyp-chat-app.herokuapp.com/signup',this.registerForm.value).subscribe(\n        async res => {\n          const response = Object.entries(res);\n          const token = response[0][1];\n          localStorage.setItem('token',token);\n          this.snackbar.open('Registered Successfully!!', null, {duration: 3000});\n          await this.chatroomService.getUserid();\n          //await this.websocketService.communication();\n\n          this.router.navigate(['/dashboard']);\n        },\n        err =>{ \n          if(err.error == \"Not a valid email\"){\n            this.snackbar.open('Register only with College Mail(it.ssn.edu.in)', null, {duration: 3000});\n          }\n          else if(err.error == \"User Already Registered\"){\n            this.snackbar.open('This User is already Registered!', null, {duration: 3000});\n          }\n          console.log(err)\n        })\n    }\n  }\n  redirectToLoginPage(){\n    this.router.navigate(['/login']);\n  }\n}\n","<!-- <div class=\"container\">\n    <form [formGroup]='registerForm'>\n        <div class=\"col-lg-5 form-group \">\n            <label for=\"name\">Name:</label>\n            <input type=\"text\" formControlName='name' class=\" form-control\" id=\"name\">\n        </div>\n        <div class=\"col-lg-5 form-group\">\n            <label for=\"email\">Email address:</label>\n            <input type=\"email\" formControlName='email' class=\"form-control\" id=\"email\">\n        </div>\n        <div class=\"col-lg-5 form-group\">\n            <label for=\"pwd\">Password:</label>\n            <input type=\"password\" formControlName='password' class=\"form-control\" id=\"pwd\">\n        </div>\n        <div class=\"col-lg-5\">\n            <label for=\"year\">Year:</label>\n            <select class=\"form-select\" formControlName='year'>\n                <option>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n            </select>\n        </div>\n        <div class=\"col-lg-5\">\n            <label for=\"section\">Section:</label>\n            <select class=\"form-select\" formControlName='section'>\n                <option>A</option>\n                <option>B</option>\n\n            </select>\n        </div>\n        <button (click)='registerDetails()' class=\"mt-3 btn btn-primary\">Register</button>\n    </form>\n</div> -->\n<app-nav-bar></app-nav-bar>\n<div>\n    <div class=\"container col-lg-6 myDiv\"\n        style=\"vertical-align: center;background-color:black;border: 1px solid black;align-items: center; justify-content: center;\">\n        <h1 style=\"text-align: center;\" class=\"mt-2\">Register</h1>\n        <div >\n            <form [formGroup]='registerForm'>\n                <div class=\"row\">\n                    <mat-form-field class=\"offset-lg-3 col-lg-6\">\n                        <mat-label>Name</mat-label>\n                        <input matInput type=\"text\" placeholder=\"Enter Name\" formControlName='name' required>\n                    </mat-form-field>\n                </div>\n                <div class=\"row\">\n                    <mat-form-field class=\"offset-lg-3 col-lg-6\">\n                        <mat-label>Email ID</mat-label>\n                        <input matInput type=\"email\" placeholder=\"Enter Email\" formControlName='email' required>\n                    </mat-form-field>\n                </div>\n                <div class=\"row\">\n                    <mat-form-field class=\"offset-lg-3 col-lg-6\">\n                        <mat-label>Password</mat-label>\n                        <input matInput type=\"password\" placeholder=\"Enter Password\" formControlName='password'\n                            required>\n                    </mat-form-field>\n                </div>\n                <div class=\"row\">\n                    <mat-form-field class=\"offset-lg-3 col-lg-6\">\n                        <mat-label>Year</mat-label>\n                        <mat-select formControlName='year' required>\n                            <mat-option class=\"not-empty-select\" value=\"1\">First Year</mat-option>\n                            <mat-option value=\"2\">Second Year</mat-option>\n                            <mat-option value=\"3\">Third Year</mat-option>\n                            <mat-option value=\"4\">Fourth Year</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                </div>\n                <div class=\"row\">\n                    <mat-form-field class=\"offset-lg-3 col-lg-6\">\n                        <mat-label>Section</mat-label>\n                        <mat-select formControlName='section' required>\n                            <mat-option value=\"A\">A</mat-option>\n                            <mat-option value=\"B\">B</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"row offset-lg-3 col-lg-6 mb-3\">\n                    <button mat-raised-button (click)='registerDetails()' class=\"mt-3\">Register</button>\n                </div>\n                \n            </form>\n            <div class=\"row offset-lg-3 col-lg-6 mb-3\">\n                <p>Already have an account ? <button mat-raised-button (click)=\"redirectToLoginPage()\">Click Here</button></p>\n            </div>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {AuthService} from './../auth.service';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n  constructor(public authService: AuthService , private router: Router) { }\n  adminLogin: boolean = false;\n  ngOnInit(): void {\n    \n  }\n  logoutUser(){\n    this.authService.logOutuser();\n  }\n  \n}\n","<nav class=\"navbar sticky-top\" style=\"background-color: black;\">\n    <div class=\"container\">\n        <Span>CHAT APP</Span>\n        <button style=\"float: right;\" (click)=\"logoutUser()\" *ngIf=\"this.authService.loggedIn()\"  mat-raised-button>Log Out</button>\n    </div>\n    \n</nav>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport * as socketIo from 'socket.io-client';\nimport { io } from 'socket.io-client';\nimport { ChatroomService } from './chatroom.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebSocketService {\n  //itemArray: any = [];\n  //public socket: any;\n  constructor(private chatroomService: ChatroomService,private http: HttpClient, private router: Router) { \n  }\n  \n  public socket =  io('https://fyp-chat-app.herokuapp.com', {\n    query:{\n      id:localStorage.getItem('user_id'),\n    }\n  });\n\n  // async communication(){\n  //   this.socket = await io('http://localhost:3000', {\n  //     query:{\n  //       id:this.chatroomService.loginId,\n  //     }\n  //   });\n  // }\n\n  async joinRoom(){\n    this.socket.emit('joinRoom',{\n      userid:localStorage.getItem('user_id'),\n      chatRoomId:this.chatroomService.roomId\n    });\n    \n  }\n\n  leaveRoom(){\n    this.socket.emit('leaveRoom',{\n      chatRoomId:this.chatroomService.roomId\n    })\n    this.router.navigate(['/dashboard']);\n  }\n\n  chatRoomMessage(message){\n    this.socket.emit('chatroomMessage',{\n      user:localStorage.getItem('user_id'),\n      name:this.chatroomService.name,\n      chatroom:this.chatroomService.roomId,\n      message:message\n    });  \n    \n  }\n\n  announcementMessage(message){\n    this.socket.emit('announcementMessage',{\n      user:localStorage.getItem('user_id'),\n      name:this.chatroomService.name,\n      message:message\n    })\n  }\n\n  videoCallJoining(id){\n    this.socket.emit('video-call', this.chatroomService.roomId, id)\n  }\n\n  async leaveVideoCall(){\n    await this.socket.emit('videocall-disconnect',this.chatroomService.roomId,localStorage.getItem('user_id'))\n  }\n\n  userDisconnected(){\n    const observable = new Observable<any>\n    (observer => {\n      this.socket.on('user-disconnected', (data) => {\n        observer.next(data);\n        console.log(data + '??');\n      });\n      return () => {\n        this.socket.disconnect();\n      };\n    });\n    return observable;\n  }\n\n  getAllMessagesfromRoom(){\n   return this.http.get(`https://fyp-chat-app.herokuapp.com/chatroomMessages/${this.chatroomService.roomId}`);\n  }\n\n  getAnnouncementMessages(){\n    return this.http.get('https://fyp-chat-app.herokuapp.com/announcementMessages');\n  }\n  \n  // this.socket.once('chatroomMessage',(data:any) => {\n\n  //     this.itemArray.push(data);\n  //     console.log(this.itemArray);\n  //   })\n\n  receiveMessages(){\n    const observable = new Observable<{ chatroom: any, user: any, message: String, name: String }>\n    (observer => {\n      this.socket.on('chatroomMessage', (data) => {\n        observer.next(data);\n        console.log(data + 'on success');\n      });\n      return () => {\n        this.socket.disconnect();\n      };\n    });\n  return observable;\n  }\n  \n  receiveAnnouncementMessages(){\n    const observable = new Observable<{ user: any, message: String, name: String }>\n    (observer => {\n      this.socket.on('announcementMessage', (data) => {\n        observer.next(data);\n        console.log(data + 'on success');\n      });\n      return () => {\n        this.socket.disconnect();\n      };\n    });\n  return observable;\n  }\n  \n  \n\n  \n\n  // chatRoomMessage(message){\n  //   this.socket.emit('chatroomMessage',{\n  //     chatroomId:this.chatroomService.roomId,\n  //     message:`${message}`\n  //   });\n  //   this.socket.once('newMessage', async (data:any)=>{\n  //     this.itemArray.push(data);\n  //     console.log(this.itemArray);\n  //   }\n  //   )\n  // }\n  \n\n \n}\n","import { HttpInterceptor } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private injector:Injector) { }\n\n  intercept(req,next){\n    let authService = this.injector.get(AuthService)\n    let tokenizedReq = req.clone({\n      setHeaders:{\n        Authorization:`Bearer ${authService.getToken()}`\n      }\n    });\n    return next.handle(tokenizedReq);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n  chatRoomForm: FormGroup;\n  roomArray: Object;\n\n  constructor(private formBuilder: FormBuilder, private http: HttpClient, private router: Router) {\n    this.chatRoomForm = this.formBuilder.group({\n      name:['',Validators.required],\n      year:['',Validators.required],\n      section:['',Validators.required]\n    })\n   }\n\n  ngOnInit(): void {\n    this.getChatRoom()\n  }\n\n  async addChatroom(){\n    if(this.chatRoomForm.valid){\n      await this.http.post('https://fyp-chat-app.herokuapp.com/chatRoom',this.chatRoomForm.value).subscribe(\n        async res => {\n          await this.getChatRoom();\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    \n      this.chatRoomForm.value.name = \"\"\n  }\n\n  async getChatRoom(){\n    await this.http.get('https://fyp-chat-app.herokuapp.com/chatRoom').subscribe(\n      res => {\n        this.roomArray = res;\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401 || err.status === 500){\n            this.router.navigate(['/login']);\n          }\n        }\n      })\n  }\n  individualRoom(item){\n    this.http.delete(`https://fyp-chat-app.herokuapp.com/chatRoom/${item._id}`).subscribe(\n      res => {\n        this.getChatRoom();\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n}\n","\n    <!-- <form [formGroup]='chatRoomForm'>\n        <div class=\"col-lg-5 form-group \">\n            <label for=\"name\">Chat Room Name:</label>\n            <input type=\"text\" class=\" form-control\" formControlName='name' id=\"chatroom\">\n        </div>\n        <div class=\"col-lg-5\">\n            <label for=\"year\">Year:</label>\n            <select class=\"form-select\" formControlName='year'>\n                <option>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n            </select>\n        </div>\n        <div class=\"col-lg-5\">\n            <label for=\"section\">Section:</label>\n            <select class=\"form-select\" formControlName='section'>\n                <option>A</option>\n                <option>B</option>\n\n            </select>\n        </div>\n        <button type=\"submit\" (click)='addChatroom()' class=\"mt-3 btn btn-warning\">Create Chatroom</button>\n    </form> -->\n<app-nav-bar></app-nav-bar>\n<div>\n    <div class=\"container col-lg-6\">\n        <h1 style=\"text-align: center;\" class=\"mt-2\">Chatroom Dashboard</h1>\n        <form [formGroup]='chatRoomForm'>\n            <div class=\"row\">\n                <mat-form-field class=\"offset-lg-3 col-lg-6\">\n                    <mat-label>Name</mat-label>\n                    <input matInput type=\"text\" placeholder=\"Enter Name\" formControlName='name' required>\n                </mat-form-field>\n            </div>\n            <div class=\"row\">\n                <mat-form-field class=\"offset-lg-3 col-lg-6\">\n                    <mat-label>Year</mat-label>\n                    <mat-select formControlName='year' required>\n                        <mat-option value=\"1\">First Year</mat-option>\n                        <mat-option value=\"2\">Second Year</mat-option>\n                        <mat-option value=\"3\">Third Year</mat-option>\n                        <mat-option value=\"4\">Fourth Year</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"row\">\n                <mat-form-field class=\"offset-lg-3 col-lg-6\">\n                    <mat-label>Section</mat-label>\n                    <mat-select formControlName='section' required>\n                        <mat-option value=\"A\">A</mat-option>\n                        <mat-option value=\"B\">B</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"row\">\n                <div class =\"offset-lg-3 col-lg-3 mb-3\">\n                    <button mat-raised-button (click)='addChatroom()' class=\"mt-3\">Create Chatroom</button>\n                </div>\n                <div class=\"offset-lg-1 col-lg-3\">\n                    <button mat-raised-button class=\"mt-3\" type=\"reset\">Reset</button>\n                </div>                \n            </div>          \n        </form>\n    </div>\n    <br>\n    <div class=\"container\">\n        <div class=\"row\">\n            <h1 style=\"text-align: center;text-decoration: underline;\" class=\"col-lg-4\">Room Name</h1>\n                <h1 style=\"text-align: center; text-decoration: underline;\" class=\"col-lg-4\">Year and Section</h1>\n                <h1 style=\"text-align: center; text-decoration: underline;\" class=\"col-lg-4\">Action</h1>\n        </div>\n        <div *ngFor=\"let item of roomArray\">\n            <div class=\"row\" style=\"text-align: center;\">\n                <p class=\"col-lg-4\">{{item.name}}</p>\n                <p class=\"col-lg-4\">{{item.year}} - {{item.section}}</p>\n                <p class=\"col-lg-4\"><button (click)='individualRoom(item)' mat-raised-button>Remove</button></p>\n            </div>\n    \n        </div>\n    </div>\n   \n</div>","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { ChatroomService } from '../chatroom.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  chatRoomForm: FormGroup;\n  roomArray:any = [];\n  displayError: boolean = false;\n  constructor(private formBuilder:FormBuilder, private router: Router, private http: HttpClient, private chatroomService: ChatroomService, private snackbar: MatSnackBar) {\n    this.chatRoomForm = this.formBuilder.group({\n      name:''\n    })\n   }\n  \n  async ngOnInit() {\n    await this.getChatRoom();\n    await this.chatroomService.getUserid();\n  }\n\n  async getChatRoom(){\n    await this.http.get('https://fyp-chat-app.herokuapp.com/chatRoom').subscribe(\n      res => {\n        this.roomArray = res;\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401 || err.status === 500){\n            this.router.navigate(['/login']);\n          }\n        }\n      })\n  }\n\n  // addChatroom(){\n  //   this.http.post('http://localhost:3000/chatRoom',this.chatRoomForm.value).subscribe(\n  //     res => {\n  //       this.getChatRoom();\n  //     },\n  //     err => {\n  //       console.log(err);\n  //     }\n  //   )\n  // }\n\n  individualRoom(item){\n    // this.chatroomService.roomId = item._id;\n    if(item.year == this.chatroomService.year && item.section == this.chatroomService.section){\n      this.router.navigate(['/chatroom',item._id]);\n    }\n    else{\n      this.snackbar.open('This room is not available for you!', null, {duration: 3000});\n    }\n  }\n}\n","<app-nav-bar></app-nav-bar>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n            <h1 style=\"text-align: center; text-decoration: underline;\" class=\"mt-2\">CHATROOMS</h1>\n            \n            <!-- <div *ngFor=\"let item of roomArray\">\n                <p>{{item.name}} - {{item.year}} - {{item.section}} <button (click)='individualRoom(item)'\n                        class=\"btn btn-success\">Join</button></p>\n\n            </div> -->\n            <div class=\"row\">\n                <h1 style=\"text-align: center;text-decoration: underline;\" class=\"col-lg-4\">Room Name</h1>\n                    <h1 style=\"text-align: center; text-decoration: underline;\" class=\"col-lg-4\">Year and Section</h1>\n                    <h1 style=\"text-align: center; text-decoration: underline;\" class=\"col-lg-4\">Action</h1>\n            </div>\n            <div *ngFor=\"let item of roomArray\">\n                <div class=\"row\" style=\"text-align: center;\">\n                    <p class=\"col-lg-4\">{{item.name}}</p>\n                    <p class=\"col-lg-4\">{{item.year}} - {{item.section}}</p>\n                    <p class=\"col-lg-4\"><button (click)='individualRoom(item)' mat-raised-button>Join</button></p>\n                </div>\n        \n            </div>\n            \n        </div>\n        <div class=\"col-lg-6\">\n            <app-announcement></app-announcement>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { io } from 'socket.io-client';\nimport { ChatroomService } from './chatroom.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ClientSide';\n  constructor(private chatroomService: ChatroomService){\n\n  }\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n  }\n}\n","<router-outlet></router-outlet>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { ChatroomService } from '../chatroom.service';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n  adminLoginForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private http: HttpClient, private router: Router, private snackbar: MatSnackBar) {\n    this.adminLoginForm = this.formBuilder.group({\n      email:['',Validators.required],\n      password:['',Validators.required]\n    })\n   }\n  ngOnInit(): void {\n  }\n\n  adminLogin(){\n    if(this.adminLoginForm.value.email==\"admin@gmail.com\" && this.adminLoginForm.value.password==\"admin123\"){\n      this.snackbar.open('Login Successfully!!', null, {duration: 3000});\n      this.router.navigate(['/admin/dashboard']);\n    }\n    else{\n      this.snackbar.open('Invalid Credentials!', null, {duration: 3000});\n      console.log(\"Invalid User\");\n    }\n  }\n}\n","<!-- <div>\n    <form [formGroup]='adminLoginForm'>\n        <div class=\"col-lg-5 form-group\">\n            <label for=\"email\">Email address:</label>\n            <input type=\"email\" class=\"form-control\" formControlName='email' id=\"email\">\n        </div>\n        <div class=\"col-lg-5 form-group\">\n            <label for=\"pwd\">Password:</label>\n            <input type=\"password\" class=\"form-control\" formControlName='password' id=\"pwd\">\n        </div>\n        <button (click)='adminLogin()' class=\"mt-3 btn btn-primary\">Login</button>\n    </form>\n</div> -->\n\n<app-nav-bar></app-nav-bar>\n<div>\n    <div class=\"container col-lg-4 myDiv\"\n        style=\"vertical-align: center;background-color:black;border: 1px solid black;align-items: center; justify-content: center;\">\n        <h1 style=\"text-align: center;\" class=\"mt-2\">Admin Login</h1>\n        <div >\n            <form [formGroup]='adminLoginForm'>\n                <div class=\"row\">\n                    <mat-form-field class=\"offset-lg-3 col-lg-6\">\n                        <mat-label>Email address</mat-label>\n                        <input matInput type=\"text\" placeholder=\"Enter Name\" formControlName='email' required>\n                    </mat-form-field>\n                </div>\n                <div class=\"row\">\n                    <mat-form-field class=\"offset-lg-3 col-lg-6\">\n                        <mat-label>Password</mat-label>\n                        <input matInput type=\"email\" placeholder=\"Enter Email\" formControlName='password' required>\n                    </mat-form-field>\n                </div>\n               \n                <div class=\"row offset-lg-3 col-lg-6 mb-3\">\n                    <button mat-raised-button (click)='adminLogin()' class=\"mt-3\">Login</button>\n                </div>\n            </form>\n        </div>\n\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport{HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http'\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ChatroomComponent } from './chatroom/chatroom.component';\nimport {FormsModule} from '@angular/forms'\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { AuthGuard } from './auth.guard';\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport { AnnouncementComponent } from './announcement/announcement.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { VideochatComponent } from './videochat/videochat.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    ChatroomComponent,\n    AdminLoginComponent,\n    AdminDashboardComponent,\n    AnnouncementComponent,\n    NavBarComponent,\n    VideochatComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatSnackBarModule\n  ],\n  providers: [AuthGuard,{\n    provide:HTTP_INTERCEPTORS,\n    useClass:TokenInterceptorService,\n    multi:true\n  },{provide: LocationStrategy, useClass: HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private router:Router) { }\n  loggedIn(){\n    return !!localStorage.getItem('token');\n  }\n\n  getToken(){\n    return localStorage.getItem('token');\n  }\n\n  logOutuser(){\n    localStorage.removeItem('token');\n    this.router.navigate(['/login']);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ChatroomService } from '../chatroom.service';\nimport { WebSocketService } from '../web-socket.service';\n\n@Component({\n  selector: 'app-videochat',\n  templateUrl: './videochat.component.html',\n  styleUrls: ['./videochat.component.css']\n})\nexport class VideochatComponent implements OnInit {\n\n  public peers = {};\n  public myVideo: HTMLVideoElement;\n  //UserId: { chatroom: any; user: any; message: String; name: String; };\n  myPeer: any;\n  constructor(private webSocket: WebSocketService, private chatRoom: ChatroomService, private route: Router) {\n    this.peerConnection();\n    //this.webSocket.videoCallUserJoining().subscribe(data => this.UserId = data);\n    //this.videoGrid = document.getElementById('videoGrid')\n    this.myVideo = document.createElement('video')\n    this.myVideo.muted = true;\n    this.sendingToOthers();\n    this.streamPlay();\n    this.socketListening();\n\n  }\n\n  ngOnInit(): void {\n  }\n\n\n\n  peerConnection() {\n    this.myPeer = new Peer(this.chatRoom.loginId, {\n      secure: true, \n      host: 'fyp-chat-app.herokuapp.com', \n      port: 443,\n    })\n\n    this.myPeer.on('open', id => {\n      this.webSocket.videoCallJoining(id);\n    })\n  }\n\n  sendingToOthers() {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(Stream => {\n      this.addVideoStream(this.myVideo, Stream)\n\n    })\n  }\n\n  removeVideoCallUser() {\n    this.webSocket.userDisconnected().subscribe(\n      userId => {\n        const data = userId;\n        if (this.peers[data]) {\n          console.log(this.peers[data]);\n          this.peers[data].close();\n        }\n        // this.route.navigate(['/dashboard']);\n      });\n  }\n\n  streamPlay() {\n    this.myPeer.on('call', async call => {\n      let Stream = null;\n      Stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      })\n      call.answer(Stream);\n      const video = document.createElement('video');\n      await call.on('stream', async userVideoStream => {\n        await this.addVideoStream(video, userVideoStream);\n      })\n    })\n  }\n\n  socketListening() {\n    this.webSocket.socket.on('user-connected', async id => {\n      let Stream = null;\n      Stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      })\n      console.log('In Socket')\n      await this.connectToNewUser(id, Stream)\n    })\n  }\n\n  async videoPlay(video) {\n    await video.play();\n  }\n\n  async addVideoStream(video, stream: any) {\n    video.srcObject = stream;\n    await video.addEventListener('loadedmetadata', this.videoPlay.bind(this, video))\n    const videoGrid = document.getElementById('videoGrid')\n    await videoGrid.append(video);\n  }\n\n\n\n  async connectToNewUser(userId: any, Stream: any) {\n    const call = await this.myPeer.call(userId, Stream);\n    const video = document.createElement('video')\n    await call.on('stream', async userVideoStream => {\n      await this.addVideoStream(video, userVideoStream);\n    })\n    call.on('close', async () => {\n      video.remove()\n    })\n    this.peers[userId] = call;\n    console.log(this.peers[userId]);\n  }\n\n\n  async leaveCall() {\n    await this.webSocket.leaveVideoCall();\n    //this.route.navigate(['/dashboard']);\n    await this.removeVideoCallUser()\n  }\n}\n","<app-nav-bar></app-nav-bar>\n\n<div class=\"container\">\n    <div style=\"float: right;\">\n        <button mat-raised-button (click)=\"leaveCall()\">Leave Call</button>\n    </div>\n    <div id=\"videoGrid\" class=\"col-lg-3\">\n\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport {Login} from './Models/Login'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatroomService {\n  loginId;\n  name;\n  roomId;\n  roomName: any;\n  year;\n  section;\n  constructor(private authService: AuthService, private http: HttpClient) { }\n  async getUserid(){\n    let token = await this.authService.getToken();\n    const success : any  = await this.http.get(`https://fyp-chat-app.herokuapp.com/userDetails/${token}`).toPromise();\n    \n    this.name = success.name;\n    this.loginId = success._id;\n    this.year = success.year;\n    this.section = success.section;\n    localStorage.setItem('user_id',this.loginId);\n  }\n  async getChatroomName(){\n    await this.http.get(`https://fyp-chat-app.herokuapp.com/chatRoom/${this.roomId}`).subscribe(\n      res => {\n        const ChatroomDetails = Object.entries(res);\n        this.roomName = ChatroomDetails[0][1].name;\n      },\n      err => {\n        console.log('err');\n      }\n    );\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ChatroomService } from '../chatroom.service';\nimport { WebSocketService } from '../web-socket.service';\n\n@Component({\n  selector: 'app-announcement',\n  templateUrl: './announcement.component.html',\n  styleUrls: ['./announcement.component.css']\n})\nexport class AnnouncementComponent implements OnInit {\n  public announcementMessage = \"\";\n  announcementArray:any = [];\n  constructor(private webSocket:WebSocketService, private router: Router, private chatroomService: ChatroomService) { \n    this.webSocket.receiveAnnouncementMessages().subscribe(data => this.announcementArray.push(data));\n\n  }\n\n  async ngOnInit() {\n    await this.chatroomService.getUserid();\n    await this.announcementConversations();\n  }\n\n  sendingMessage(){\n    if(this.announcementMessage!=\"\"){\n      this.webSocket.announcementMessage(this.announcementMessage);\n      this.announcementMessage = \"\";\n    }\n    \n  }\n\n  async announcementConversations(){\n    const announcementConversation = await this.webSocket.getAnnouncementMessages().subscribe(\n      res => {\n        this.announcementArray = res;\n      },\n      err => {\n        console.log(err);\n        \n      }\n    );\n  }\n}\n","<div class=\"container\" >\n    <!-- <div class=\"row mt-2\">\n        <div class=\"col-sm-4 col-md-4 col-lg-4\">\n            <h2>ANNOUNCEMENTS</h2>\n        </div>\n    </div>\n    \n    <div *ngFor=\"let item of announcementArray; let i=index\">\n        <p> <b>{{item.name}}</b> : {{item.message}} </p>\n    </div>\n    \n    <div>\n        <input type=\"text\" [(ngModel)]=\"announcementMessage\">\n        <button class=\"btn btn-primary\" (click)=\"sendingMessage()\">Send</button>\n    </div> -->\n    <div class=\"row\" style=\"border-left: 3px solid black;\">\n        <h1 style=\"text-align: center; text-decoration: underline;\" class=\"mt-2\">DISCUSSION FORUM</h1>\n        <div *ngFor=\"let item of announcementArray; let i=index\">\n            <div class=\"row\">\n                <div class=\"offset-lg-3 col-lg-9\">\n                    <p> <span style=\"color: green; font-weight:bold\">{{item.name}} </span> : {{item.message}}</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"offset-lg-3 col-lg-6\">\n                <mat-form-field class=\"col-lg-12\">\n                    <input matInput type=\"text\" [(ngModel)]=\"announcementMessage\">\n                </mat-form-field>\n                \n            </div>\n            <div class=\"col-lg-3\">\n                <button mat-raised-button (click)=\"sendingMessage()\">Send</button>\n            </div>\n            \n        </div>\n        \n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  \n  constructor(private authService: AuthService,private router: Router){ }\n    canActivate() : boolean{\n      if(this.authService.loggedIn()){\n        return true;\n      }\n      else{\n        this.router.navigate(['/login']);\n        return false;\n      }\n    }\n  \n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\nimport { AuthGuard } from './auth.guard';\nimport { ChatroomComponent } from './chatroom/chatroom.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { VideochatComponent } from './videochat/videochat.component';\n\nconst routes: Routes = [\n  {path:'', redirectTo:'/login', pathMatch: 'full'},\n  {path:'login', component: LoginComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'admin/login', component: AdminLoginComponent},\n  {path:'admin/dashboard', component:AdminDashboardComponent},\n  {path:'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\n  {path:'chatroom/:id', component: ChatroomComponent, canActivate:[AuthGuard]},\n  {path:'videocall/:id',component: VideochatComponent, canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport {ReactiveFormsModule,FormBuilder, FormGroup, Validators} from '@angular/forms'\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { io } from 'socket.io-client';\nimport { AuthService } from '../auth.service';\nimport { ChatroomService } from '../chatroom.service';\nimport { Login } from '../Models/Login';\nimport { WebSocketService } from '../web-socket.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup\n  constructor(private formBuilder: FormBuilder, private http: HttpClient, private router: Router, private chatroomService: ChatroomService, private websocketService: WebSocketService, private authService: AuthService, private snackbar: MatSnackBar) {\n    this.loginForm = this.formBuilder.group({\n      email:['',Validators.required],\n      password:['',Validators.required]\n    })\n   }\n\n  ngOnInit(): void {\n    if(this.authService.loggedIn()){\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  async loginDetails(){\n    if(this.loginForm.valid){\n      const val = this.http.post('https://fyp-chat-app.herokuapp.com/login',this.loginForm.value).subscribe(\n        async res => {\n          const response = Object.entries(res);\n          const token = response[0][1];\n          localStorage.setItem('token',token);\n          const snackbarRef = this.snackbar.open('Login Successfully!!', null, {duration: 3000});\n          //this.chatroomService.loginId = res;\n          await this.chatroomService.getUserid();\n          //await this.websocketService.communication();\n          this.router.navigate(['/dashboard']);\n        },\n        err => {\n          this.snackbar.open('Invalid Credentials!', null, {duration: 3000});\n          console.log(err);\n        }\n      )\n    }\n    \n  }\n  redirectToRegisterPage(){\n    this.router.navigate(['/register']);\n  }\n\n  redirectToAdmin(){\n    this.router.navigate(['/admin/login']);\n  }\n\n  // async communication(){\n  //   const socket = await io('http://localhost:3000', {\n  //     query:{\n  //       id:this.chatroomService.loginId\n  //     }\n  //   });\n  // }\n}\n","<!-- <div>\n    <form [formGroup]='loginForm'>\n        <div class=\"col-lg-5 form-group\">\n            <label for=\"email\">Email address:</label>\n            <input type=\"email\" class=\"form-control\" formControlName='email' id=\"email\">\n        </div>\n        <div class=\"col-lg-5 form-group\">\n            <label for=\"pwd\">Password:</label>\n            <input type=\"password\" class=\"form-control\" formControlName='password' id=\"pwd\">\n        </div>\n        <button (click)='loginDetails()' class=\"mt-3 btn btn-primary\">Login</button>\n    </form>\n</div> -->\n<app-nav-bar></app-nav-bar>\n<div>\n    <div class=\"container col-lg-5 myDiv\"\n        style=\"vertical-align: center;background-color:black;border: 1px solid black;align-items: center; justify-content: center;\">\n        <h1 style=\"text-align: center;\" class=\"mt-2\">Login</h1>\n        <div >\n            <form [formGroup]='loginForm'>\n                <div class=\"row\">\n                    <mat-form-field class=\"offset-lg-3 col-lg-6\">\n                        <mat-label>Email address</mat-label>\n                        <input matInput type=\"email\" placeholder=\"Enter Name\" formControlName='email' required>\n                    </mat-form-field>\n                </div>\n                <div class=\"row\">\n                    <mat-form-field class=\"offset-lg-3 col-lg-6\">\n                        <mat-label>Password</mat-label>\n                        <input matInput type=\"password\" placeholder=\"Enter Email\" formControlName='password' required>\n                    </mat-form-field>\n                </div>\n               \n                <div class=\"row offset-lg-3 col-lg-6 mb-3\">\n                    <button mat-raised-button (click)='loginDetails()' class=\"mt-3\">Login</button>\n                </div>\n\n                \n            </form>\n            <div class=\"row offset-lg-3 col-lg-6 mb-3\">\n                <p>Don't have an account ? <button mat-raised-button (click)=\"redirectToRegisterPage()\">Click Here</button></p>\n            </div>\n            <div class=\"row offset-lg-3 col-lg-6 mb-3\">\n                <p>Not an User ? <button mat-raised-button (click)=\"redirectToAdmin()\">Admin Login</button></p>\n            </div>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { connect, io, Socket } from 'socket.io-client';\nimport { ChatroomService } from '../chatroom.service';\nimport { WebSocketService } from '../web-socket.service';\nimport * as socketIo from 'socket.io-client';\nimport {FormsModule} from '@angular/forms'\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-chatroom',\n  templateUrl: './chatroom.component.html',\n  styleUrls: ['./chatroom.component.css']\n})\nexport class ChatroomComponent implements OnInit {\n  itemArray:any = [];\n  \n\n  constructor(public webSocket: WebSocketService, public chatroomService: ChatroomService,private router: Router, private route: ActivatedRoute) {\n    \n    //this.recieveChatroomMessage();\n    this.webSocket.receiveMessages().subscribe(data => this.itemArray.push(data));\n\n  }\n  public message = \"\";\n  async ngOnInit() {\n    this.message = \"\";\n    this.route.paramMap.subscribe((params: ParamMap)  =>  {\n      const id = params.get('id');\n      this.chatroomService.roomId = id;\n    });\n    await this.chatroomService.getUserid();\n    await this.webSocket.joinRoom();\n    await this.chatroomService.getChatroomName();\n    await this.chatRoomConversations();\n  }\n  \n  sendingMessage(){\n    if(this.message!=\"\"){\n      this.webSocket.chatRoomMessage(this.message);\n      this.message = \"\";\n    }\n   \n  }\n  \n  // recieveChatroomMessage(){\n    // this.webSocket.socket.on('chatroomMessage',(data:any) => {\n    //   this.itemArray.push(data);\n    \n  //})\n  // }\n\n  async chatRoomConversations(){\n    const chatroomconversation = await this.webSocket.getAllMessagesfromRoom().subscribe(\n      res => {\n        this.itemArray = res;\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401 || err.status === 500){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n  }\n  \n  leaveRoom(){\n    this.router.navigate(['/dashboard']);\n  }\n\n  videoCall(){\n    this.router.navigate(['/videocall',this.chatroomService.roomId]);\n  }\n}\n","<app-nav-bar></app-nav-bar>\n<div class=\"container\">\n    <div class=\"row mt-2\">\n        <div class=\"col-lg-6\">\n            <h1 style=\"text-align: center; text-decoration: underline;\">{{this.chatroomService.roomName}}</h1>\n        </div>\n        <div class=\"col-lg-3\">\n            <button mat-raised-button (click)=\"leaveRoom()\">Leave Room</button>\n        </div>\n        <div class=\"col-lg-3\">\n            <button mat-raised-button (click)=\"videoCall()\">Group Call</button>\n        </div>\n    </div>\n\n    <div class=\"row offset-lg-2 col-lg-9\">\n        <div *ngFor=\"let item of itemArray; let i=index\">\n            <p> <span style=\"color: green;\"><b>{{item.name}}</b> </span> : {{item.message}} </p>\n        </div>\n    </div>\n    \n    \n    <div class=\"row offset-lg-2 col-lg-9\">\n        <div class=\"col-lg-7\">\n            <mat-form-field class=\"col-lg-9\">\n                <input matInput  [(ngModel)]=\"message\">\n            </mat-form-field>\n            \n        </div>\n        <div class=\"col-lg-2\">\n            <button mat-raised-button (click)=\"sendingMessage()\">Send</button>\n        </div>\n        \n    </div>\n</div>","\n///<reference path = \"typings.d.ts\"/>\n\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}